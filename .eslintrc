{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "extends": [
    "airbnb",
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "plugins": [
    "react-hooks",
    "@typescript-eslint"
  ],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    // plugin:react rules
    "react/sort-comp": "off",
    "react/default-props-match-prop-types": "off",
    "react/no-danger": "off",
    "react/prop-types": "off",
    "react/no-did-update-set-state": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-curly-newline": "off",
    "react/display-name": "warn",
    "react/no-array-index-key": "off",
    "react/react-in-jsx-scope": "off",
    "react/forbid-prop-types": "off",
    "react/jsx-props-no-spreading": "off",
    "react/no-unescaped-entities": "off",
    "react/state-in-constructor": "off",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ],
    "react/require-default-props": "warn",
    "camelcase": "warn",
    "react/no-unused-prop-types": "warn",
    // jsx-a11y rules
    "jsx-a11y/mouse-events-have-key-events": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/label-has-for": "off",
    // eslint rules
    "import/no-extraneous-dependencies": "off",
    "linebreak-style": "off",
    "no-debugger": "off",
    "no-alert": "off",
    "no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "res|next|^err"
      }
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "all"
      }
    ],
    "arrow-body-style": [
      2,
      "as-needed"
    ],
    "no-unused-expressions": [
      2,
      {
        "allowTaggedTemplates": true
      }
    ],
    "no-param-reassign": [
      2,
      {
        "props": false
      }
    ],
    "no-console": "off",
    "import/prefer-default-export": "off",
    "import": "off",
    "func-names": "off",
    "space-before-function-paren": "off",
    "comma-dangle": "off",
    "max-len": "off",
    "import/extensions": "off",
    "no-underscore-dangle": "off",
    "consistent-return": "off",
    "jsx-a11y/accessible-emoji": "off",
    "radix": "off",
    "no-shadow": [
      2,
      {
        "hoist": "all",
        "allow": [
          "resolve",
          "reject",
          "done",
          "next",
          "err",
          "error"
        ]
      }
    ],
    "quotes": [
      2,
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "jsx-a11y/href-no-hash": "off",
    "jsx-a11y/anchor-is-valid": [
      "warn",
      {
        "aspects": [
          "invalidHref"
        ]
      }
    ],
    "no-cond-assign": [
      "error",
      "except-parens"
    ],
    "react-hooks/rules-of-hooks": "warn",
    "import/no-unresolved": "off",
    "import/named": "off",
    // typescript-eslint rules
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off"
  }
}
